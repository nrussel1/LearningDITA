<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE learningContent PUBLIC "-//OASIS//DTD DITA Learning Content//EN" "learningContent.dtd">
<!-- This file is part of the DITA Training project hosted on      github.com. See the accompanying LICENSE file for      applicable licenses.-->
<learningContent id="content_pgf_3gt_qt">
    <title>Determining output requirements</title>
    <prolog class="- topic/prolog ">
        <author type="creator" href="http://www.scriptorium.com" format="html" scope="external"
            class="- topic/author ">Gretyl Kinsey</author>
        <author type="contributor" href="http://www.scriptorium.com" format="html" scope="external"
            class="- topic/author ">Simon Bate</author>
        <author type="contributor" href="http://www.scriptorium.com" format="html" scope="external"
            class="- topic/author ">Jake Campbell</author>
        <author type="contributor" href="http://www.scriptorium.com" format="html" scope="external"
            class="- topic/author ">Noelle Russell</author>
        <author type="contributor" href="http://www.scriptorium.com" format="html" scope="external"
            class="- topic/author ">Ashley Stant</author>
        <critdates>
            <created golive="2017-03-06" date="2017-02-10"/>
        </critdates>
    </prolog>
    <learningContentbody>
        <lcInstruction>
            <p>In other courses, you learned how authoring in DITA gives your content semantic value
                and helps increase reuse. In this course, you will learn about the benefits of DITA
                for publishing and gain hands-on experience with generating various types of output
                from DITA source content.</p>
            <p>When you’re planning to publish your DITA content, one of the first questions you
                might ask yourself is, “What sort of publishing environment do I need?” The first
                step in choosing the right publishing environment for your DITA workflow is
                determining your output requirements.</p>
            <p>You might need both print-based outputs (such as PDF) and electronic outputs (such as
                HTML, EPUB, or WebHelp) for your content.</p>
            <note>For some output types, such as highly-designed printed materials or complex data
                sheets, you might find that automated publishing does not meet your needs. However,
                you still want to maintain a single set of source files. In this case, you need to
                transform your DITA source content into a format that can be opened in a desktop
                publishing program (such as Adobe InDesign) so that you can manually adjust the
                formatting before publishing PDF or printed output.</note>
            <p>DITA helps make publishing more efficient by:</p>
            <ul id="ul_g2j_mc2_3z">
                <li><b>Separating content from formatting.</b> In an unstructured environment,
                    authors might maintain one set of source files for print publication and another
                    for electronic publication. The files for print might be authored and formatted
                    in a desktop publishing program, while the files for electronic output might be
                    copied from the print-based source files and re-formatted, or authored
                    separately. With DITA, authors create a single set of source files, and
                    formatting is applied separately to create each required output type. This
                    reduces inconsistencies between printed and electronic versions of the same
                    content and ensures that an update made in the source will be reflected in all
                    outputs.</li>
                <li><b>Allowing for automated formatting.</b> Because DITA content is separated from
                    formatting, the formatting can be applied automatically during the publishing
                    process rather than manually. Content creators can focus on the content itself
                    rather than how it is displayed on the page, and publishing becomes a faster,
                    push-button process.</li>
            </ul>
        </lcInstruction>
    </learningContentbody>
</learningContent>
